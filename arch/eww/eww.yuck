;======================Left Bar===================;
;======================(vibes)====================;
(defwindow leftbar
	:namespace "leftbar"
  :monitor 0
  :stacking "bg"
  :wm-ignore true
  :geometry (geometry
	:y "10%"
	:x "1%"
	:width "20%"
	:height "50%")
  (leftbarlayout))

(defwidget leftbarlayout []
    (box :orientation "v"
	(box 
		:vexpand true
		:hexpand true
		(box (clock))
		(box (uptime))
)))


;(deflisten temp :initial "--"
  ;`tail -F /tmp/weather-temp`)

;(defwidget diskinfo []
  ;(box ))

;(defwidget weather [] 
  ;(box ))

;;; system
;(defpoll HOST :interval "10m" `hostname`)
;(defpoll CPU_USAGE :interval "1s" `scripts/sys_info --cpu`)
;(defpoll MEM_USAGE :interval "1s" `scripts/sys_info --mem`)
;;(defpoll BLIGHT :interval "1s" `scripts/sys_info --blight`)

;;(defwidget system [] 
	;;(box :class "genwin" :vexpand "false" :hexpand "false" 
		;;(box :orientation "v" :spacing 35 :halign "center" :valign "center" :space-evenly "false" :vexpand "false" :hexpand "false" 
			;;(box :class "cpu_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
				;;(label :class "iconcpu" :text "")
				;;(scale :min 0 :max 100 :value CPU_USAGE :active "false"))
			;;(box :class "mem_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
				;;(label :class "iconmem" :text "")
				;;(scale :min 0 :max 100 :value MEM_USAGE :active "false"))
			;;;(box :class "bright_bar" :orientation "h" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
				;;;(label :class "iconbright" :text "")
				;;;(scale :min 0 :max 100 :value BLIGHT :active "false"))
			;;)))

;; clock
(defpoll TIME :interval "5s" `date +\"%I:%M %p\"`)
(defpoll DATE :interval "5s" `date +\"%b %d-(%A) \"`)

(defwidget clock []
	(box :class "clockParent" :orientation "v"
		(box :class "time" :orientation "h" :hexpand true :spacing 36 :space-evenly false
			(label :class "clockIcon" :text "")
			(label :class "clockTime" :text TIME)
		)
		(box :class "date" :orientation "h" :hexpand true :spacing 36 :space-evenly false
			(label :class "" :text "")
			(label :class "" :text DATE)
		)
	)
)

;; uptime
(defpoll UPHOUR :interval "5s" `uptime -p | awk '{print $2 \" \" $3}' | sed 's/,//g'`)
(defpoll UPMIN :interval "5s" `uptime -p | awk '{print $4 \" \" $5}'`)
(defwidget uptime [] 
	(box :class "genwin" 
		(box :orientation "h" :halign "center" :spacing 40 :space-evenly "false" :vexpand "false" :hexpand "false" 
			(label :class "icontimer" :valign "center" :text "󱦟")
			(box :orientation "v" :valign "center" :spacing 0 :space-evenly "false" :vexpand "false" :hexpand "false" 
				(label :class "uphour" :halign "start" :wrap "true" :limit-width 25 :text UPHOUR)
				(label :class "upmin" :halign "start" :wrap "true" :limit-width 25 :text UPMIN)))))

;;; Music
;(defpoll SONG :interval "1s" `scripts/music_info --song`)
;(defpoll ARTIST :interval "1s" `scripts/music_info --artist`)
;(defpoll STATUS :interval "1s" `scripts/music_info --status`)
;(defpoll CURRENT :interval "1s" `scripts/music_info --time`)
;(defpoll COVER :interval "1s" `scripts/music_info --cover`)
;(defpoll CTIME :interval "1s" `scripts/music_info --ctime`)
;(defpoll TTIME :interval "1s" `scripts/music_info --ttime`)
;(defwidget music [] 
	;(box :class "genwin" :orientation "h" :space-evenly "false" :vexpand "false" :hexpand "false" 
		;(box :class "album_art" :vexpand "false" :hexpand "false" :style "background-image: url('${COVER}');")
		;(box :orientation "v" :spacing 20 :space-evenly "false" :vexpand "false" :hexpand "false" 
			;(label :halign "center" :class "song" :wrap "true" :limit-width 20 :text SONG)
			;(label :halign "center" :class "artist" :wrap "true" :limit-width 15 :text ARTIST)
			;(box :orientation "h" :spacing 20 :halign "center" :space-evenly "true" :vexpand "false" :hexpand "false" 
				;(button :class "btn_prev" :onclick "scripts/music_info --prev" "玲")
				;(button :class "btn_play" :onclick "scripts/music_info --toggle" STATUS)
				;(button :class "btn_next" :onclick "scripts/music_info --next" "怜"))
			;(box :class "music_bar" :halign "center" :vexpand "false" :hexpand "false" 
				;(scale :onscroll "mpc -q seek +1" :min 0 :active "true" :max 100 :value CURRENT)))))
